<?xml version="1.0" encoding="UTF-8"?>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!-- status配置Log4j2启动和加载配置文件时的日志输出登记 -->
<Configuration status="info">
    <!--appenders:定义输出内容,输出格式,输出方式,日志保存策略等,常用其下三种标签[console,File,RollingFile] -->
    <!--Appender可以理解为日志的输出目的地 -->
    <Appenders>
        <!--console :控制台输出的配置 -->
        <Console name="Console" target="SYSTEM_OUT">
            <!--
            %d 输出日志时间点的日期或时间
            %t 输出产生该日志事件的线程名
            %p 输出优先级，即DEBUG,INFO,WARN,ERROR,FATAL
            %F 输出日志消息产生时所在的文件名称
            %c 输出所属的类目,通常就是所在类的全名
            %L 输出代码中的行号
             -->
            <PatternLayout pattern="%d{YYYY-MM-dd HH:mm:ss} %-5p [%c,%L]- %msg%n" />
        </Console>

        <RollingFile name="RollingFile" filename="log/ZycTest.log"
                     filepattern="${logPath}/%d{YYYYMMddHHmmss}-fargo.log">
            <PatternLayout pattern="%d{YYYY-MM-dd HH:mm:ss}  %-5p [%c,%L] - %msg%n" />
            <Policies>
                <SizeBasedTriggeringPolicy size="100 MB" />
            </Policies>
            <DefaultRolloverStrategy max="20" />
        </RollingFile>
    </Appenders>
    <!--定义logger，只有定义了logger并引入的appender，appender才会生效 -->
    <Loggers>
        <!-- Logger节点用来单独指定日志的形式，可以为通过name属性设置指定包下的class指定不同的日志级别等 ,
        可以设置Logger的additivity="false"只在自定义的Appender中进行输出 -->
        <logger name="dao" level="debug" additivity="false">
            <appender-ref ref="Console" />
        </logger>
        <!-- Root节点用来指定项目的根日志，如果没有单独指定Logger，那么就会默认使用该Root日志输出 -->
        <Root level="info">
            <AppenderRef ref="Console" />
            <AppenderRef ref="RollingFile" />
        </Root>
    </Loggers>
</Configuration>